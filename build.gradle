plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.1'
}

apply plugin: 'scala'

configurations {
    scalaCompiler
}

tasks.withType(ScalaCompile) {
    scalaClasspath = configurations.scalaCompiler
    scalaCompileOptions.additionalParameters = ['-feature']
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    scalaCompiler 'org.scala-lang:scala-compiler:2.11.12'

    compileOnly 'org.scala-lang:scala-library:2.11.12'
    compile 'org.clapper:grizzled-slf4j_2.11:1.3.2'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'com.typesafe:config:1.3.3'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
    compile 'org.apache.spark:spark-sql-kafka-0-10_2.11:2.3.2'
    compile 'org.apache.spark:spark-core_2.11:2.3.1'
    compile 'org.apache.spark:spark-sql_2.11:2.3.1'
    compile 'org.json4s:json4s-native_2.11:3.6.1'
    compile 'org.scala-lang.modules:scala-xml_2.11:1.1.1'


    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.11:3.0.5'
    testCompile 'org.clapper:grizzled-slf4j_2.11:1.3.2'
    testCompile 'ch.qos.logback:logback-core:1.2.3'
    testCompile 'org.slf4j:slf4j-api:1.7.25'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.25'
}

task spec(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}

//task printVersion {
//    doLast {
//        println project.version.toString()
//    }
//}
